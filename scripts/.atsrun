#! /usr/bin/env bash
# Variable
autosubcomp="$HOME/check/AutosubCOMP.txt"
autosubfail="$HOME/check/AutosubFAIL.txt"
autosubdone="$HOME/check/AutosubDONE.txt"

[ ! -d "$HOME/check" ] && mkdir $HOME/check
[ ! -f "$autosubcomp" ] && touch $HOME/check/AutosubCOMP.txt
[ ! -f "$autosubfail" ] && touch $HOME/check/AutosubFAIL.txt
[ ! -f "$autosubdone" ] && touch $HOME/check/AutosubDONE.txt

S="ja-jp"
mnrs="0.5"
mxrs="4"
et="5"
f="srt"
d="vi"
src="ja"
tailnum=$(($# + 6))

# Variable Color for text
LIGHTCYAN=$'\e[1;37m'
ORANGE=$'\e[0;33m'
GREEN=$'\e[0;32m'
RED=$'\e[0;31m'
YELLOW=$'\e[1;33m'
LIGHTBLUE=$'\e[1;34m'
NC=$'\e[0m' ## No Color

# Function Basename
filebasename() {
	filename=$(basename "$file")
	name=${filename%.*}
return
}

# Function Show Config
config() {
echo -e "${LIGHTCYAN}\n======CONFIG======${NC}"
echo -e "${LIGHTCYAN}S    : $S        |${NC}"
echo -e "${LIGHTCYAN}src  : $src      |${NC}"
echo -e "${LIGHTCYAN}d    : $d        |${NC}"
echo -e "${LIGHTCYAN}mnrs : $mnrs     |${NC}"
echo -e "${LIGHTCYAN}mxrs : $mxrs     |${NC}"
echo -e "${LIGHTCYAN}et   : $et       |${NC}"
echo -e "${LIGHTCYAN}f    : $f        |${NC}"
echo -e "${LIGHTCYAN}==================${NC}\n"
return
}

# Function Cleanup
cleanAutosub() {
	sudo find /tmp -type f -name "*.flac" -delete 2>/dev/null
	sudo find /tmp -type f -name "*.wav" -delete 2>/dev/null
return
}

# Function Autosub
Autosub() {
	echo -e "\n${LIGHTBLUE}Starting Autosub${NC} ${YELLOW}[$filename]${NC}"
	echo -e "\n${LIGHTBLUE}Autosub With AP${NC}\n"
    	autosub -i "$file" -of regions -S $S -of src -der -mnrs $mnrs -mxrs $mxrs -et $et -ap y
	# Clean File Temp
	if [ "$?" -ne "0" ] 2>/dev/null ;then
	sleep 0.3
	cleanAutosub
	sleep 4
	echo -e "\n${LIGHTBLUE}Autosub Without AP${NC}\n"
	autosub -i "$file" -of regions -S $S -of src -der -mnrs $mnrs -mxrs $mxrs -et $et
	# Clean file Temp
	sleep 0.3
	cleanAutosub
	fi
return
}

# Functions Autosub only without AP
AutosubSpec() {
	echo -e "\n${LIGHTBLUE}Starting Autosub${NC} ${YELLOW}[$filename]${NC}"
	echo -e "\n${LIGHTBLUE}Autosub Without AP{NC}\n"
	autosub -i "$file" -of regions -S $S -of src -der -mnrs $mnrs -mxrs $mxrs -et $et
	# Clean file Temp
	sleep 0.3
	cleanAutosub
return
}

# Function Translate Subtitle
# Rename Subtitle to .srt only and Remove file Subtitle Origin
Translate() {
	echo -e "\n${LIGHTCYAN}=================${NC}"
	echo -e "${LIGHTCYAN}CONFIG TRANSLATE|${NC}"
	echo -e "${LIGHTCYAN}SRC : $src      |${NC}"
	echo -e "${LIGHTCYAN}D   : $d        |${NC}"
	echo -e "${LIGHTCYAN}=================${NC}\n"
	echo -e "${LIGHTBLUE}Starting Translate${NC} ${YELLOW}[$filename]${NC}\n"
	autosub -i "$PWD/$name.$S.$f" -SRC $src -D $d -F $f
	sleep 0.3
	mv "$PWD/$name.$S.$d.$f" "$name.$f" 2>/dev/null
	if [ "$?" -eq "0" ] 2>/dev/null ;then
	rm "$name.$S.$f" 2>/dev/null
	fi
return
}

# Function Loop each file in folder to Autosub
AutosubAuto() {
for file in "$@" ;do
	# Filter file name and output
	filebasename "$file"
	#output="$PWD/$name.$f" 
	# Run Autosub Function
	if { [ "$noap" == "y" ] || [ "$noap" == "Y" ]; } 2>/dev/null ;then
		AutosubSpec "$file" ## Autosub without AP only
	else
		timeout 60m Autosub "$file" ## Autosub With AP and Without AP in 60 Minutes
	fi
	# Run Translate Function And check Autosub Comp or Fail
	if { [ "$?" -eq 0 ] && [ -f "$name.$S.$f" ]; } 2>/dev/null ;then
		Translate
	else
		echo -e "\n${RED}File${NC} ${YELLOW}"$name.$S.$f"${NC} ${RED}not Exist , PLEASE CHECK AGAIN${NC}\n"
	fi
	# Check Video Comp or Fail to text file
	if ([ "$?" -eq "0" ] && [ -f "$name.$f" ]) 2>/dev/null ;then
		echo "$filename" >> "$autosubcomp"
	else
		echo "$filename" >> "$autosubfail"
	fi	
done
return
}

# Function Check if Another Bash srcipt is running
#checkbash() {
####fi
#}

#Function Autosub for CASE
CASEautosub() {
read -r -n 1 -p 'Bo Qua Buoc Dung AP? (y/n) ' noap
{ [[ "$noap" == "y" ]] || [[ "$noap" == "Y" ]]; } 2>/dev/null && echo -e "\n${LIGHTBLUE}Da Xac Nhan Bo Qua Khong Dung AP${NC}"
if [ "$#" -eq "0" ] ;then
	echo -e "\n${GREEN}AUTOSUB TAT CA FILE TRONG THU MUC${NC}\n"
	for file in *.{mp4,mkv,avi,wmv,TS,ts} ;do
		if [ -f "$file" ] ;then
			#text=$(grep -wF "$filename" "$autosubcomp")
			if [ "$(grep -wF "$filename" "$autosubcomp")" == "$filename" ] 2>/dev/null ;then ## Check file Completed
				echo "$filename" >> "$autosubdone" 
				echo -e "\n${YELLOW}Da Autosub${NC} ${GREEN}[File]${NC}\n"
			else
				config
				AutosubAuto "$file"
			fi
		fi
		sleep 0.5
	done
else
	echo -e "\n${GREEN}AUTOSUB CHO TUNG FILE DUOC CHON${NC}\n"
	config
	AutosubAuto "$@"
fi
	# File Da Hoan Thanh
	echo -e "\n${GREEN}[COMPLETED]${NC}\n"
	tail -n $tailnum "$autosubcomp" 2>/dev/null
	# File Khong Hoan Thanh
	if [ -f "$autosubfail" ] 2>/dev/null ;then
		echo -e "\n${RED}[FAIL]${NC}\n"
		cat "$autosubfail" 2>/dev/null
		rm "$autosubfail" 2>/dev/null
	fi
	# File Da Autosub
	if [ -f "$autosubdone" ] 2>/dev/null ;then
		echo -e "\n${YELLOW}[FAIL]${NC}\n"
		cat "$autosubdone" 2>/dev/null
		rm "$autosubdone" 2>/dev/null
	fi
return
}

# Function List Menu
menuAutosub() {
cat << _EOF_

Main Menu: What would you like to do?

Press the number of your choice:

	1 - Autosub Japanese
	2 - Autosub Chinese (Simplified, China)
	3 - Autosub English
	4 - Translate Subtitle (Japanese Default)
	5 - Custom
	
	0 - Exit
	
_EOF_

# Wait for user to make a choice and run chosen functions:
read -r -n 1 -s choice;

	case $choice in
	
		1 )  # Autosub Japanese
			echo -e "\n-------------------" >> "$autosubcomp"
			clear
			CASEautosub "$@"
		;;
			
		2 )	# Autosub Chinese (Simplified, China)
			echo -e "\n-------------------" >> "$autosubcomp"
			clear
			S="cmn-hans-cn"
			src="zh-cn"
			CASEautosub "$@"
		;;
			
		3 )	# Autosub English
			echo -e "\n-------------------" >> "$autosubcomp"
			clear
			S="en-us"
			src="en"
			CASEautosub "$@"
		;;
			
		4 )	# Translate (Japanese)
			read -n 1 -s -p -r 'Tuy Chinh ? (y/n): ' option
			echo 
			# Option for Custom Translate
			if { [ "$option" == "y" ] || [ "$option" == "Y" ]; } 2>/dev/null ;then
				read -p -r 'Ngon ngu muon dich /src? ' src1
				# Display list SRC Support
				if [ -n "$(autosub -ltc | grep -i "$src1")" ] 2>/dev/null ;then
					echo -e "${LIGHTBLUE}$(autosub -lsc | grep -i "$src1")${NC}\n"
					read -p -r 'Nhap thong so "SRC" nhu tren: ' src
				fi
				echo 
				read -p -r 'Ngon ngu muon dich sang /d? ' d1
				# Display list D Support
				if [ -n "$(autosub -ltc | grep -i "$d1")" ] 2>/dev/null ;then
					echo -e "${LIGHTBLUE}$(autosub -ltc | grep -i "$d1")${NC}\n"
					read -p -r 'Nhap thong so "D" nhu tren: ' d
				fi
				
			fi
			clear
			for file in "$@" ;do
			# Info for Base Name
			filebasename "$file"
			# Translate Subtitle
			Translate
			if [ "$?" -eq "0" ] 2>/dev/null ;then
				echo -e "\n${GREEN}[$filename] is DONE${NC}"
			else
				echo -e "${YELLOW}[$filename]${NC} ${RED}is FAIL${NC}"
				echo -e "${RED}Please Translate Again${NC}"
			fi
			done
		;;
			
		5 ) # Custom
			clear
			read -p -r 'Nhap Ngon Ngu Muon Dich Sang: ' S1
			# Display S Support
			if [ -n "$(autosub -lsc | grep -i "$S1")" ] 2>dev/null ;then
				echo -e "Nhap Ngon Ngu S Nhu Tren /Default $S: "
				read -r S
				[[ -z "$S" ]] && S="ja-jp"
			fi
			read -p -r 'Nhap Ngon Ngu Nhan Dang Dich SRC: ' src1
			# Display SRC Support
			if [ -n "$(autosub -ltc | grep -i "$src1")" ] 2>dev/null ;then
				echo -e "Nhap Ngon Ngu Dich SRC Nhu Tren /Default ${ORANGE}$src${NC}: "
				read -r src
				[[ -z "$src" ]] && src="ja"
			fi
			read -p -r 'Nhap ngon ngu muon dich sang D: ' d1
			# Display D Support
			if [ -n "$(autosub -ltc | grep -i "$d1")" ] 2>/dev/null ;then
				echo -e "Nhap Ngon Ngu Muon Dic Sang D /Default ${ORANGE}$d${NC}: "
				read -r d
				[[ -z "$d" ]] && d="vi"
			fi
			echo -e "Nhap Threesold et /Default ${ORANGE}$et${NC} : "
			read -r et
			[[ -z "$et" ]] && et="5"
			echo -e "Nhap Dinh Dang Sub /Default ${ORANGE}$f${NC} : "
			read -r f
			[[ -z "$f" ]] && f="srt"
			echo -e "Nhap mnrs /Default ${ORANGE}$mnrs${NC} : "
			read -r mnrs
			[[ -z "$mnrs" ]] && mnrs="0.5"
			echo -e "Nhap mxrs /Default ${ORANGE}$mxrs${NC} : "
			read -r mxrs
			[[ -z "$mxrs" ]] && mxrs="4"
			clear
			echo -e "\n--------------------------------- " >> "$autosubcomp"
			CASEautosub "$@"
		;;
		
		0 )	# Break Menu
			return
			clear
			echo -e "${LIGHTBLUE}Da Out${NC}"
		;;
			
		* )	# Not Valid Choice
			clear
			echo -e "\n${RED}Not a valid choice${NC}"
			echo -e "${RED}Please choice some number${NC}\n"
			menuAutosub "$@"
		;;
		
		
			
	esac
}

################### Running Code ######################
#######################################################
# Info
clear
echo -e "${ORANGE}+-----------------------+${NC}"
echo -e "${ORANGE}|Autosub Translate Video|${NC}"
echo -e "${ORANGE}+-----------------------+${NC}\n"

# Python 3.8 Env for Autosub
if [ -f "$HOME/autosub-env/env/bin/activate" ] ;then
source "$HOME/autosub-env/env/bin/activate" 2>/dev/null
fi

# Check yes/no and Autosub for each file in folder
	if [ "$?" -eq "0" ] 2>/dev/null ;then
		menuAutosub "$@"
	else
		echo -e "\n${RED}Fail to Env Python for Autosub${NC}"
		echo -e "${RED}Please Install Python Env and Install Autosub${NC}\n"
	fi
if [ -f "$HOME/autosub-env/env/bin/activate" ] ;then
deactivate
fi

echo -e "\n${LIGHTCYAN}DONE ALL${NC}"
echo -e "${LIGHTCYAN}THANK YOU FOR USING${NC}"
cleanAutosub 2>/dev/null
